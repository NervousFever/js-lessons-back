
const mongoWhereAnd2Sql = require("./mongo-where-and-2-sql");

const mongoJsonW2Sql = (jsonW, sqlWheres) => {
    let sqlW = "";
    for (let key in jsonW) {
        let value = jsonW[key];
        if (value !== undefined && value !== null) {
            // bổ sung mệnh đề $and và $or để chuyển đổi
            if (key === "$and" || key === "$or") {
                // kiểu $and:[{key:...}]
                let sqlOrAnd = mongoAndOr2Sql(key, value, sqlW);
                // console.log(`--->sqlOrAnd:${sqlOrAnd}`,key, value, sqlW);
                sqlW = sqlOrAnd ? `${sqlW ? `(${sqlW}) ${key === "$or" ? "OR" : "AND"} (${sqlOrAnd})` : `(${sqlOrAnd})`}` : sqlW;
            } else if (Array.isArray(value)) {
                // kiểu key:[1,2,3]
                sqlW += `${!sqlW ? `` : ` AND `}${key} IN ('${value.join("','")}')`;
            } else if (typeof value === "object") {
                // kiểu key:{$in:,$lte:...} = operators
                sqlW += mongoWhereAnd2Sql(key, value, sqlW);
            } else if (typeof value === "string" && value.indexOf("__$") === 0) {
                // kiểu key:__$to_char('20200101','yyyymmdd') = hàm nội tại của csdl thì truyền nguyên gốc không có ''
                // ví dụ change_date=__$to_char('20200101','yyyymmdd') ==> change_date=to_char('20200101','yyyymmdd')
                sqlW += `${!sqlW ? `` : ` AND `}${key}=${value.substring(3)}}`;
            } else {
                // kiểu key:value
                sqlW += `${!sqlW ? `` : ` AND `}${key}=${typeof value == "number" ? `${value}` : `'${value}'`}`;
            }
        } else if (value === null) {
            // kiểu key:value=null
            sqlW += `${!sqlW ? `` : ` AND `}${key} is null`;
        }
    }
    return sqlWheres ? ` AND ${sqlW}` : sqlW;
}

const mongoAndOr2Sql = (operator, arrLogic) => {

    if (!arrLogic || !Array.isArray(arrLogic) || !arrLogic.length) {
        return "";
    }

    let sqlWhereAndOr = "";
    for (let jsonW of arrLogic) {
        sqlWhereAndOr += `${!sqlWhereAndOr ? "" : operator === "$or" ? " OR " : " AND "}` + mongoJsonW2Sql(jsonW, "")
    }

    return sqlWhereAndOr;
}

// chuyển đổi mệnh đề where của mongo sang sql để select, update, delete
// ví dụ:
/**
 * Chuyển từ:
 * let mWhere = {
  key: {
    '$lte': 12,
    '$gte': 5,
    '$ne': 7,
    '$exists': false,
    '$neq': 6,
    '$in': [ 1, 2 ],
    '$nin': [ 3, 4 ],
    '$lt': 7
  },
  name_value: { '$lte': 12 },
  key_w: { '$lte': 12 },
  price_w: { '$ne': 1.99 },
  id_in: [ 1, 2, 3 ],
  '$and': [ { '$or': [Array] }, { '$or': [Array] } ],
  '$or': [ { qty: [Object] }, { qty: [Object] } ]
} 
* @param {*} jsonWhere 
* @param {*} isAll = true là trả về where, nếu không chỉ trả về biên dịch thôi 
-->return: WHERE ((key <= 12 AND key >= 5 AND key != 7 AND key is null AND key in ('1','2') AND key not in ('3','4') AND key < 7 AND name_value <= 12 AND key_w <= 12 AND price_w != 1.99 AND id_in IN ('1','2','3')) AND ((qty < 10 OR qty > 50) AND (sale='true' OR price < 5))) OR (qty < 1000 OR qty > 5000)
*/

// sử dụng hàm này bao quát tất cả mệnh đề where của mongo nhé
module.exports = (jsonWhere, isAll = true) => {
    let sqlWhereAll = mongoJsonW2Sql(jsonWhere, "");
    return sqlWhereAll ? `${isAll ? ` WHERE ` : ``}${sqlWhereAll}` : "";
}