// hàm chuyển đổi tham số query từ ? mệnh đề wheres để thành jsonWhere như jsonPost
/**
 * các ký tự có thể truyền sau dấu ? ở url mà không bị mất:
 * wheres=abc:~!@$^*()-_+{}[],\:;"<>,.
 * thử:
 * ?strWheres={abc_1:null , name: I'm^a^student, xyz_324y:false,key_x:{ $lte: Cộng^hòa^xã^hội^chủ^nghĩa^việt^nam, $gte: 5, $in: [1, 2], $nin: [3, 4], $lt: 7 },$and:[{ $or: [{ qty: { $lt: 10 } }, { qty: { $gt: 50 } }] },{ $or: [{ sale: true }, { price: { $lt: 5 } }]}]}
 * kết quả:
 *           abc:null,xyz:false,key:{ $lte: ăâđêôơưĂÂĐÊÔƠƯàáạảãằắặẳẵầấậẩẫèéẹẻẽềếệểễìíịỉĩòóọỏõồốộổỗờớợởỡùúụủũừứựửữỳýỵỷỹÀÁẠẢÃẰẮẶẲẴẦẤẬẨẪÈÉẸẺẼỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕỒỐỘỔỖỜỚỢỞỠÙÚỤỦŨỪỨỰỬỮỲÝỴỶỸ, $gte: 5, $in: [1, 2], $nin: [3, 4], $lt: 7 },$and:[{ $or: [{ qty: { $lt: 10 } }, { qty: { $gt: 50 } }] },{ $or: [{ sale: true }, { price: { $lt: 5 } }]}]
 * 
 * mệnh đề wheres có thể truyền sau dấu ? giả lập như post nhưng luượt bỏ "" và yêu cầu thay dấu cách (space) bằng ^ để đảm bảo cho việc chuyển đổi json thuận lợi
 * 
 * wheres = {}
 * 
 * @param {*} strWheres 
 * mWhere = {
    xyz$null: null,
    abc: 1, // chỉ giá trị thôi
    key: { $lte: 12, $gte: 5, $ne: 7, $exists: false, $neq: 6, $in: [1, 2], $nin: [3, 4], $lt: 7 },
    name_value: { $lte: 12 },
    key_w: { $lte: 12 },
    price_w: { $ne: 1.99 },
    id_in: [1, 2, 3],
    $and: [{ price: { $ne: 100 } }, { price: { $exists: true } }],
    $or: [{ qty: { $lt: 1000 } }, { qty: { $gt: 5000 } }],
    $and: [
        { $or: [{ qty: { $lt: 10 } }, { qty: { $gt: 50 } }] },
        { $or: [{ sale: true }, { price: { $lt: 5 } }] }
    ]
};
 */

// định nghĩa key, value trong json
const JSON_KEY_VALUE = /([a-zA-Z0-9ăâđêôơưĂÂĐÊÔƠƯàáạảãằắặẳẵầấậẩẫèéẹẻẽềếệểễìíịỉĩòóọỏõồốộổỗờớợởỡùúụủũừứựửữỳýỵỷỹÀÁẠẢÃẰẮẶẲẴẦẤẬẨẪÈÉẸẺẼỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕỒỐỘỔỖỜỚỢỞỠÙÚỤỦŨỪỨỰỬỮỲÝỴỶỸ/\^\$_\(\)\*@\.\-']+)/g;
const JSON_MARK_REPLACE = '"$1"';
const REPLACE_SPACE_CHAR = /\^/g;

// ví dụ: strWheres= {abc_1:null , name: I'm^a^student^(là^đây), path: /user/cuong-dq/ip-ABC^xyz.js, email:cuong.dq@mobifone.vn, xyz_324y:false,key_x:{$like:*xx*_,$lte: Cộng^hòa^xã^hội^chủ^nghĩa^việt^nam, $gte: 5, $in: [1, 2], $nin: [3, 4], $lt: 7 },$and:[{ $or: [{ qty: { $lt: 10 } }, { qty: { $gt: 50 } }] },{ $or: [{ sale: true }, { price: { $lt: 5 } }]}]}
module.exports = (strWheres) => {
    let jsonWhere = {};
    if (!strWheres || typeof strWheres !== "string" || !strWheres.length) {
        return {};
    }
    strWheres = strWheres.replace(JSON_KEY_VALUE, JSON_MARK_REPLACE);
    // console.log("XX", strWheres, JSON.parse(strWheres));
    try {
        jsonWhere = JSON.parse(strWheres, (key, value) => {
            if (value && typeof value === "string") return value.replace(REPLACE_SPACE_CHAR, " ")
            return value;
        }) || {};
    } catch {
        jsonWhere = {};
    }
    return jsonWhere;
}